Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4

====== Agent.hh ======
Created Wednesday 02 October 2013


includes:
Header.hh
Misc.hh
Genome.hh
Network.hh
Cell.hh
stdlib.h

**class Agent**

 public:
  Genome *G;//1 per agent!
  Network *N;//1 per agent!
  list<Cell> cells;
  int E[NrStorages][NrFinalCells][NrGeneTypes]; //store spatiotemporal expression pattern
  int cellpattern[NrStorages][NrFinalCells/10][NrGeneTypes]; //stores pattern per cell, not per position
  int types[NrStorages][NrFinalCells];//store spatiotemporal celltype pattern
  int bands[NrFinalCells][4];
  double avgexprbands[NrFinalCells][NrGeneTypes];
  int bandtypes[NrFinalCells];
  int nrbands;
  int nrlongbands;
  int agentid;
  int parentid;
  int tbirth;
  double nonexpfitness;
  double fitness;
  double glpenalty;
  double instpenalty;
  double shortsegpenalty;
  int anrcells_;
  double wfspeed;
  double divprob; //individual division probability for stochastic divisions

**variables for analysis**
int nrlonganddifbands;
  int nrhomogbands;
  int nrdifbutrepeatedbands;
  int nrequilibria;
  double equilibria[1000][NrGeneTypes];
  double sizeequilibria[1000];
  int nrequsedtotal,nrequsedend;
  double avgeqsize;
  int nrplustfbs,nrmintfbs;
  double avgindegree,maxindegree,minindegree,stdindegree;
  double avgoutdegree,maxoutdegree,minoutdegree,stdoutdegree;
  double avgtotdegree,maxtotdegree,mintotdegree,stdtotdegree;
  int nrposloops,nrposloopsE,nrposloopsI;
  int nrposmutual,nrposmutualE,nrposmutualI;
  int nrnegmutual,nrnegmutualE,nrnegmutualI;
  int nrposthreesome,nrposthreesomeE,nrposthreesomeI;
  int A[200][200];
 
 
std::list<int> ancestry;
typedef std::list<int>::iterator iter;

Agent();
~Agent();
[[:Evo-Devo code:Agent.hh:void CreateAgentFromScratch(int agid int t)|void CreateAgentFromScratch(int agid,int t);]]
[[:Evo-Devo code:Agent.hh:void CreateAgentFromGenome(int agid int t char  fname)|void CreateAgentFromGenome(int agid,int t,char *fname);]]
[[:Evo-Devo code:Agent.hh:void CloneAgentFromAgent(Agent  A int agid int t)|void CloneAgentFromAgent(Agent *A,int agid,int t);]]
[[:Evo-Devo code:Agent.hh:void CreateAgentFromParent(Agent  A int agid int t)|void CreateAgentFromParent(Agent *A,int agid,int t);]]
[[Agent.hh:void InitAgent(int aid int pid int t)|void InitAgent(int aid,int pid,int t);]]
[[Agent.hh:void DevelopAgent()|void DevelopAgent();]]
[[Agent.hh:void FormZygote()|void FormZygote();]]
[[:Evo-Devo code:Agent.hh:void CellCellSignalling(int t)|void CellCellSignalling(int t);]]
[[Agent.hh:void IntracellularDynamics()|void IntracellularDynamics();]]
[[Evo-Devo code:Agent.hh:void DivideGrowthZone();|void DivideGrowthZone();]]
[[:Evo-Devo code:Agent.hh:void StoreAgentState(int I)|void StoreAgentState(int I);]]
[[Evo-Devo code:Agent.hh:void StoreCellStates(int I);|void StoreCellStates(int I);]]
[[Agent.hh:void MaintenanceIntracellularDynamics(int i)|void MaintenanceIntracellularDynamics(int i);]]
[[Agent.hh:void DetermineFitness(int t);|void DetermineFitness(int t);]]
[[Agent.hh:void WriteGenome(char dirname)|void WriteGenome(char *dirname);]]
[[Agent.hh:int CellTypeToColor(int type)|int CellTypeToColor(int type);]]
[[Evo-Devo code:Agent.hh:int SegmentToColor(int type, int max);|int SegmentToColor(int type, int max);]]
[[Agent.hh:int ProteinStateToCellType(double proteinstates[NrGeneTypes])|int ProteinStateToCellType(double proteinstates[NrGeneTypes]);]]
[[Agent.hh:void WriteEmbryology(char dirname)|void WriteEmbryology(char *dirname);]]
[[Agent.hh:void WriteSignalProfiles(char dirname)|void WriteSignalProfiles(char *dirname);]]
[[Agent.hh:void WriteFitnessDetails(char dirname)|void WriteFitnessDetails(char *dirname);]]

**for analysing evolved agents:**
void CreateAgentFromFile(char *despath,int agentidnr);
  void InitAgentFromFile(char *despath,int agentidnr);
  void FinishAgentFromFile();
  void DetermineGenotypeSimilarity(Agent *M,int *genosim);
  void CloneAgentFromAgentForSafety(Agent *A,int agentidnr,int flag);
  void FindProteinOscillations(int *array);
  int DifferentEquilibrium(double p1[NrGeneTypes],double p2[NrGeneTypes]);
  int CompareAgents(Agent *A, int c);
  void WriteGenome(int c);
  void WriteNetwork(int c);
  void WriteNetworkProgression(int c, char* destdir, int cell);
  void WriteSegmentEmbryology(int c);
  void WriteExtraSignalProfiles(int c);
  void WriteBasicProperties(int aid);
  void DetermineGenomeAndNetworkProperties(char *filename);
  void WriteGenomeAndNetworkProperties(int aid);
  void DetermineAttractorProperties();
  void WriteAttractorProperties(int aid);
  void removeDoubles(list <int> &tallying, int finalcall);
  void DetermineLoopAndMotifProperties();
  void WriteLoopAndMotifProperties(int aid, char *name);
  void DetermineGenoNetworkPhenoDistance(Agent *M,double *genodist,double *phenodist);
  void WriteGenoNetworkPhenoDistance(int aid,double genodist,double phenodist,double cumgenodist,double cumphenodist);
